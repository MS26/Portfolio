name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-app:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Run Install
        run: npm ci

      - name: Run Linting
        run: npm run lint

      - name: Run Build
        run: npm run build:ci

      - uses: actions/upload-artifact@v3
        with:
          name: release-app
          path: ./dist/portfolio/*
          retention-days: 1

  build-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Handlebars
        run: |
          npm install -g hbs-cli

      - name: Render Data
        run: |
          hbs --data src/assets/data.json src/pdf/pdf.component.hbs --output src/pdf/rendered

      - name: Convert Data
        uses: fifsky/html-to-pdf-action@v0.1.0
        with:
          htmlFile: ./src/pdf/rendered/pdf.component.html
          outputFile: ./src/pdf/rendered/resume.pdf
          pdfOptions: '{"format": "A4", "pageRanges": "1", "printBackground": true}'

      - uses: actions/upload-artifact@v3
        with:
          name: release-pdf
          path: ./src/pdf/rendered/resume.pdf
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: [build-app, build-pdf]
    
    concurrency:
      group: deploy
      cancel-in-progress: true

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: release-app
          path: ./release

      - uses: actions/download-artifact@v3
        with:
          name: release-pdf
          path: ./release
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run Deploy
        run:  |
          aws s3 sync ./release/ ${{ secrets.AWS_S3_URL }} --delete --sse=AES256
          response=$(aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*')

          id=$(echo $response | grep "Id" | awk -F'"' '{ print $4 }')

          echo $response
          echo $id